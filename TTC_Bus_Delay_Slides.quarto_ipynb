{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Toronto Transit Commission (TTC) Bus Delay\"\n",
        "subtitle: \"Group 4\"\n",
        "author: \"Agam Sanghera, Ashita Diwan, Cheng Zhang, Yichun Liu\"\n",
        "format: revealjs\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "## Introduction\n",
        "![Source: Toronto Star](images/ttc_bus_crowded.avif)\n",
        "\n",
        "## Introduction\n",
        "![Source: Toronto Observer](images/ttc_bus_delay.png)\n",
        "\n",
        "## Introduction\n",
        "- Importance of the topic\n",
        "    - Impacts on commuters\n",
        "    - Effects on transportation network\n",
        "\n",
        "## Introduction\n",
        "- Purpose of the report\n",
        "    - To analyze bus delays in the TTC system\n",
        "    - To identify key patterns, causes, and potential solutions for these delays\n",
        "\n",
        "## Introduction\n",
        "- End product: build a logistic regression model to predict future bus delay duration\n",
        "    - Better allocate resources\n",
        "    - Enhance bus service precision\n",
        "\n",
        "## Objectives\n",
        "- Understand the primary causes of bus delays.\n",
        "- Analyze trends based on data (e.g., time of day, location, type of delay).\n",
        "- Provide actionable insights to improve service efficiency.\n",
        "\n",
        "![](images/objectives.png)\n",
        "\n",
        "## Methodology\n",
        "\n",
        "**Data Source:** TTC bus delay logs.\n",
        "\n",
        "**Techniques Used:**\n",
        "\n",
        "- Statistical methods to identify trends and correlations.\n",
        "\n",
        "- Data visualization for pattern recognition.\n",
        "\n",
        "**Tools/Software:** Python (Pandas, Matplotlib, Seaborn).\n",
        "\n",
        "![](images/methodology.png)\n",
        "\n",
        "# Analysis {style=\"text-align: center\"}\n",
        "\n",
        "\n",
        "## Analysis\n",
        "1. **Loading and Preprocessing Data** \n",
        "2. **Visualization** \n",
        "3. **Modelling**\n",
        "\n",
        "## Analysis: Loading and Preprocessing Data \n",
        "- Handle missing values \n",
        "// ... existing code ...\n",
        "\n",
        "## Analysis: Loading and Preprocessing Data \n",
        "- Handle missing values \n",
        "- Convert to appropriate datatypes\n",
        "![](images/data_conversion.png){.absolute top=225 right=30}"
      ],
      "id": "e15af8c6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "import pandas as pd\n",
        "# Load the data\n",
        "ttc = pd.read_csv('data/raw/ttc-bus-delay-data-2024.csv', parse_dates=['Date'])\n",
        "\n",
        "# Create ttc1 as a copy and process it\n",
        "ttc1 = ttc.copy()\n",
        "ttc1['Time'] = pd.to_datetime(ttc['Time']).dt.time\n",
        "ttc1['Date_'] = ttc1['Date'].dt.date\n",
        "ttc1['Month'] = ttc1['Date'].dt.month\n",
        "ttc1['Hour'] = ttc1['Time'].map(lambda x: x.hour)\n",
        "ttc1 = ttc1.drop(columns=['Date', 'Time'])\n",
        "\n",
        "# Show missing values\n",
        "print(ttc1.isna().sum())"
      ],
      "id": "5ee56f81",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "// ... rest of existing code ...\n",
        "- Convert to appropriate datatypes\n",
        "![](images/data_conversion.png){.absolute top=225 right=30}\n",
        "\n",
        "\n",
        "## Analyze distribution of delays \n",
        "![](notebooks/delay_dist.png){fig-align=\"center\"}\n",
        "\n",
        "## Identify top routes and locations with frequent delay incidents\n",
        "![](notebooks/top20_delay_routes.png){fig-align=\"center\"}\n",
        "\n",
        "## Visualize delays based on day and incident type\n",
        "![](notebooks/chart_month.png){fig-align=\"left\" width=\"500\" height=\"550\"}\n",
        "![](notebooks/chart_incident.png){fig-align=\"right\" width=\"500\" height=\"500\"}\n",
        "\n",
        "## Analysis: Modelling\n",
        "- Logistic Regression model to predict\n",
        "    - \"Short\", \"Medium\" or \"Long\" duration\n",
        "- Cross-validation and randomized grid for hyperparameter tuning\n",
        "\n",
        "# Results and Conclusions {style=\"text-align: center\"}\n",
        "\n",
        "## Results\n",
        "- **EDA** \n",
        "- **Model** \n",
        "\n",
        "## EDA\n",
        "- **Distributions** \n",
        "- **Reclassified Labels** \n",
        "\n",
        "## Distribution: Monthly Incidents\n",
        "![](results/images/incidents_by_month.png){fig-align=\"center\"}\n",
        "\n",
        "## Distribution: Daily Incidents\n",
        "![](results/images/incidents_by_day.png){fig-align=\"center\"}\n",
        "\n",
        "## Distribution: Hourly Incidents\n",
        "![](results/images/incidents_by_hour.png){fig-align=\"center\"}\n",
        "\n",
        "## Distribution of Delays\n",
        "![](notebooks/delay_dist.png){fig-align=\"center\"}\n",
        "\n",
        "## Reclassification of Delays\n",
        "![](results/images/ReclassifiedLabels.png){fig-align=\"center\"}\n",
        "\n",
        "\n",
        "## Model\n",
        "- **Model Scores** \n",
        "- **Hyperparameter Tuning**\n",
        "- **Cross Validation**\n",
        "\n",
        "## Conclusion\n",
        "- **Interpretation**\n",
        "- **Future Scope**\n",
        "\n",
        "## Interpretation\n",
        "- **Comparison of Actual vs Prediction**\n",
        "- **Exlpanation of Results**\n",
        "\n",
        "## Future Scope\n",
        "- **Improve Prediction of Long Delays**\n",
        "- **Experiment with other techniques**\n",
        "\n",
        "# Thank you for your attention {style=\"text-align: center\"}"
      ],
      "id": "053ad5c7"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}